[project]
name = "icon"
version = "0.2.0"
description = "Ion CONtrol Experiment Control Software"
readme = "README.md"
authors = [
    { name = "Mose MÃ¼ller", email = "mosemueller@gmail.com" }
]
requires-python = ">=3.10"
dependencies = [
    "pydase>=0.10.19",
    "pytz>=2024.2",
]

[project.optional-dependencies]
server = [
    "alembic>=1.14.0",
    "filelock>=3.16.1",
    "influxdb>=5.3.2",
    "sqlalchemy>=2.0.36",
    "tables>=3.10.1",
    "h5py>=3.12.1",
    "psutil>=7.0.0",
]
zedboard = [
    "tiqi-zedboard @ git+ssh://git@gitlab.phys.ethz.ch/tiqi-projects/drivers/tiqi-zedboard.git@v1.3.0",
]
client = [
    "ipympl>=0.9.5",
    "matplotlib>=3.10.0",
    "notebook>=7.3.1",
    "pandas>=2.2.3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[dependency-groups]
dev = [
    "mypy>=1.13.0",
    "podman-compose>=1.2.0",
    "pyright>=1.1.391",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.0",
    "pytest-docker>=3.1.1",
    "pyyaml>=6.0.2",
    "requests>=2.32.3",
    "ruff>=0.8.4",
    "types-psutil>=6.1.0.20241102",
    "types-pytz>=2024.2.0.20241003",
    "types-pyyaml>=6.0.12.20250402",
    "types-requests>=2.32.0.20250328",
]
build = [
    "pyinstaller>=6.15.0",
]


[tool.pyright]
include = ["src/icon", "tests"]
exclude = [
    "src/icon/server/data_access/templates/"
]
typeCheckingMode = "basic"


[tool.ruff]
target-version = "py310" # Always generate Python 3.10-compatible code
extend-exclude = [
    "docs", 
    "frontend", 
    "src/icon/server/data_access/templates/"
]

[tool.ruff.lint]
select = [
    "ASYNC", # flake8-async
    "C4",    # flake8-comprehensions
    "C901",  # mccabe complex-structure
    "E",     # pycodestyle errors
    "ERA",   # eradicate
    "F",     # pyflakes
    "FLY",   # flynt
    "G",     # flake8-logging-format
    "I",     # isort
    "ICN",   # flake8-import-conventions
    "INP",   # flake8-no-pep420
    "ISC",   # flake8-implicit-str-concat
    "N",     # pep8-naming
    "NPY",   # NumPy-specific rules
    "PERF",  # perflint
    "PIE",   # flake8-pie
    "PL",    # pylint
    "PYI",   # flake8-pyi
    "Q",     # flake8-quotes
    "RET",   # flake8-return
    "RUF",   # Ruff-specific rules
    "SIM",   # flake8-simplify
    "TID",   # flake8-tidy-imports
    "TCH",   # flake8-type-checking
    "UP",    # pyupgrade
    "YTT",   # flake8-2020
    "W",     # pycodestyle warnings
]
ignore = [
    "RUF006",  # asyncio-dangling-task
    "PERF203",  # try-except-in-loop
]

[tool.ruff.lint.mccabe]
max-complexity = 7


[tool.mypy]
exclude = ["templates/.*\\.py"]
disallow_untyped_defs = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_any_generics = true
check_untyped_defs = true
ignore_missing_imports = false

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "session"
