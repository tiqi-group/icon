"""Initial revision

Revision ID: a8766054064d
Revises:
Create Date: 2024-08-08 08:17:00.443927

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "a8766054064d"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "experiment_sources",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("file_path", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "file_path", name="source_location"),
    )
    op.create_table(
        "jobs",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("experiment_source_id", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("SUBMITTED", "PROCESSING", "PROCESSED", name="jobstatus"),
            nullable=False,
        ),
        sa.Column("git_commit_hash", sa.String(), nullable=True),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column(
            "local_parameters_timestamp", sa.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.Column("auto_calibration", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["experiment_source_id"],
            ["experiment_sources.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.CheckConstraint("priority >= 0", name="priority_ge_0"),
        sa.CheckConstraint("priority <= 20", name="priority_le_20"),
    )
    op.create_index(
        "by_experiment_id_and_status",
        "jobs",
        ["experiment_source_id", "status", "priority", "created"],
        unique=False,
    )
    op.create_table(
        "job_iterations",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("scheduled_time", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("job_id", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "PROCESSING",
                "FAILED",
                "CANCELLED",
                "DONE",
                name="jobiterationstatus",
            ),
            nullable=False,
        ),
        sa.Column("log", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["job_id"],
            ["jobs.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.CheckConstraint("priority >= 0", name="priority_ge_0"),
        sa.CheckConstraint("priority <= 20", name="priority_le_20"),
    )
    op.create_index(
        "by_job_id_and_status",
        "job_iterations",
        ["job_id", "status", "priority", "scheduled_time"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("jobs") as batch_op:
        batch_op.drop_constraint("priority_ge_0")
        batch_op.drop_constraint("priority_le_20")
        batch_op.drop_index("by_experiment_id_and_status")

    with op.batch_alter_table("job_iterations") as batch_op:
        batch_op.drop_index("by_job_id_and_status")

    op.drop_table("job_iterations")
    op.drop_table("jobs")
    op.drop_table("experiment_sources")
    # ### end Alembic commands ###
