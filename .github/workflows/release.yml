name: Create release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-22.04
    steps:
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "$tag" \
            --repo="$GITHUB_REPOSITORY" \
            --title="$tag" \
            --generate-notes

  build:
    name: Build (${{ matrix.distro.name }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distro:
          # - { name: "ubuntu", image: "ubuntu:latest", suffix: "linux-ubuntu-amd64" }
          - { name: "debian", image: "debian:latest", suffix: "linux-amd64" }

    container:
      image: ${{ matrix.distro.image }}

    env:
      BIN_NAME: icon

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install system deps
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            openssh-client git ca-certificates curl binutils gh

      - name: Install uv
        run: |
          curl -fsSL https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.GITLAB_TIQI_RPC_SSH_KEY }}

      - name: Configure SSH for GitLab
        env:
          SSH_KEY: ${{ secrets.GITLAB_TIQI_RPC_SSH_KEY }}
        run: |
          mkdir -p /root/.ssh && chmod 700 /root/.ssh
          ssh-keyscan gitlab.phys.ethz.ch >> /root/.ssh/known_hosts

      - name: Sync build dependencies
        env:
          GL_DEPLOY_USER: ${{ secrets.GITLAB_DEPLOY_USER }}
          GL_DEPLOY_TOKEN: ${{ secrets.GITLAB_DEPLOY_TOKEN }}
        run: |
          uv sync --no-dev --extra server --group build
          uv pip install "git+https://$GL_DEPLOY_USER:$GL_DEPLOY_TOKEN@gitlab.phys.ethz.ch/tiqi-projects/drivers/tiqi-zedboard.git"

      - name: Build with PyInstaller
        run: uv run pyinstaller icon.spec

      - name: Package artifact
        run: |
          mkdir -p out
          cp "dist/${BIN_NAME}" "out/${BIN_NAME}-${{ matrix.distro.suffix }}"
          chmod +x "out/${BIN_NAME}-${{ matrix.distro.suffix }}"

      - name: Upload binaries to GitHub Release
        env:
          tag: ${{ github.ref_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "$tag" out/** \
            --repo="$GITHUB_REPOSITORY"
